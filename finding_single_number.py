#给定一个数组，只有一个数出现1次，其余数都出现若干次。找出出现1次的数。

def search1(L):   #方法1：先排序。如果下个数等于当前数m，找到下一个不等于m的数并赋值给m，再和下个数比较，直到发现和下个数不相等的m。
    
    P = sorted(L)
    m = P[0]
    i = 1
    while i < len(P) and m == P[i]:  #此条件实质为判断是否等于下个数
        while m == P[i]:             #此条件实质为判断是否等于上个数，若不等于则跳回上一层循环判断等于下个数，都不相等即为此数。
            i += 1
        m = P[i]
        i += 1

    print(m)

search1([1,1,3,3,4,4,6,6,4,7,7,5])

def search2(L):  #方法2：排序后直接用循环判断每个数是否和左右两数都不相等，不相等则找到。
    
    P = sorted(L)

    if P[0] != P[1]:  #第一个数单独判断，若不是则进入第二步循环。
        return P[0]

    i = 2 
    while i < len(P)-1:  #第一个不是则第二个也绝对不是，直接从第三个开始循环一直到倒数第二个（直接判断到最后会超范围报错）
        if P[i-1]==P[i] or P[i]==P[i+1]:
            i += 1
        else:
            return P[i]

    return P[i]  #上两步若都没有return会执行到这步。能到这步说明一定是最后一个数。此时i也等于最后一个元素的索引值，故直接return即可。

print(search2([1,1,3,3,4,4,6,6,4,7,7,5]))